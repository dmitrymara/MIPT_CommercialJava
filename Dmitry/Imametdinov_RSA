import java.security.InvalidKeyException;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.util.Scanner;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;

public class RSA {
 
    public static void main ( String[] args )
            throws NoSuchAlgorithmException,
                   NoSuchPaddingException,
                   InvalidKeyException,
                   IllegalBlockSizeException,
                   BadPaddingException 
    {
        
    	 Scanner in = new Scanner(System.in);
    	 String text = in.nextLine();
        
        Cipher cipher = Cipher.getInstance( "RSA" );
        KeyPairGenerator keyGen = KeyPairGenerator.getInstance( "RSA" );
        keyGen.initialize( 1024 );
        KeyPair kp = keyGen.genKeyPair();
 
        PublicKey publicKey = kp.getPublic();
        PrivateKey privateKey = kp.getPrivate();
 
        
        cipher.init( Cipher.ENCRYPT_MODE, publicKey );
        byte[] x = cipher.doFinal( text.getBytes() );
 
        cipher.init( Cipher.DECRYPT_MODE, privateKey );
        byte[] y = cipher.doFinal( x );
        
        System.out.println("\nText is:\n" + text);
        System.out.println("\nEncrypt text:\n" + new String (x));
        System.out.println("\nDecrypt text:\n" + new String (y));
    }
}
